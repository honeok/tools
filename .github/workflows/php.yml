---
name: 'Build and Publish PHP'

on:
  schedule:
    - cron: '0 16 * * 3,6'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: 'Build and Publish PHP'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ github.repository_owner }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: 'Fetch Versions and Determine Build'
        run: |
          PHP_CVER="$(wget -qO- --tries=50 https://hub.docker.com/v2/repositories/honeok/php/tags 2>/dev/null | jq -r ".results // [] | .[].name" | grep -v '^fpm-alpine$' | sort -Vr | head -n1 | cut -d'-' -f1 || echo "")"
          PHP_LVER="$(wget -qO- --tries=50 --header="Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/php/php-src/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/php-//')"
          PHP_ALPINE_LVER="$(docker run --rm php:fpm-alpine sh -c 'php -v 2>&1' | awk '/^PHP/ {print $2; exit}' 2>/dev/null || true)"
          PHP_ALPINE_TAG="$(docker run --rm php:fpm-alpine sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2' || true)"
          echo "PHP_CVER=$PHP_CVER" >> $GITHUB_ENV
          echo "PHP_LVER=$PHP_LVER" >> $GITHUB_ENV
          echo "PHP_ALPINE_LVER=$PHP_ALPINE_LVER" >> $GITHUB_ENV
          echo "PHP_ALPINE_TAG=$PHP_ALPINE_TAG" >> $GITHUB_ENV
          if [[ ("$(echo -e "$PHP_LVER\n$PHP_CVER" | sort -V | head -n1)" != "$PHP_LVER" && "$PHP_ALPINE_LVER" == "$PHP_LVER") || (-z "$PHP_CVER" && -n "$PHP_ALPINE_LVER" && -n "$PHP_ALPINE_TAG") ]]; then
            echo "IS_RENEW=1" >> $GITHUB_ENV
          fi

      - name: 'Set up Docker QEMU'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/setup-qemu-action@v3.6.0

      - name: 'Set up Docker Buildx'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v3.11.1

      - name: 'Login to DockerHub'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Build and Push PHP image'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6.18.0
        with:
          context: ${{ github.workspace }}/ldnmp/php
          file: ${{ github.workspace }}/ldnmp/php/Dockerfile
          platforms: linux/amd64, linux/arm64/v8
          tags: |
            ${{ env.DOCKER_USERNAME }}/php:fpm-alpine
            ${{ env.DOCKER_USERNAME }}/php:${{ env.PHP_LVER }}-fpm-alpine
            ${{ env.DOCKER_USERNAME }}/php:${{ env.PHP_LVER }}-fpm-alpine${{ env.PHP_ALPINE_TAG }}
          push: true