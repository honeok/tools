---
name: 'Build and Publish Nginx'

on:
  schedule:
    - cron: '0 16 * * 3,6'
  workflow_dispatch:

jobs:
  build:
    name: 'Build and Publish Nginx'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: 'Fetch Versions and Determine Build'
        run: |
          NGX_CVER="$(wget -qO- --tries=5 "https://hub.docker.com/v2/repositories/honeok/nginx/tags" 2>/dev/null | jq -r ".results // [] | .[].name" | grep -v '^alpine$' | sort -Vr | head -n1 | cut -d'-' -f1 || echo "")"
          NGX_LVER="$(wget -qO- --tries=5 "https://api.github.com/repos/nginx/nginx/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/release-//')"
          ZSTD_LVER="$(wget -qO- --tries=5 "https://api.github.com/repos/facebook/zstd/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//')"
          CORERULESET_LVER="$(wget -qO- --tries=5 "https://api.github.com/repos/coreruleset/coreruleset/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//')"
          NGX_ALPINE_LVER="$(docker run --rm nginx:"${NGX_LVER}-alpine" sh -c "nginx -v 2>&1 | awk -F'/' '{print \$NF}'")"
          NGX_ALPINE_TAG="$(docker run --rm nginx:"${NGX_LVER}-alpine" sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2')"
          echo "NGX_CVER=$NGX_CVER" >> $GITHUB_ENV
          echo "NGX_LVER=$NGX_LVER" >> $GITHUB_ENV
          echo "ZSTD_LVER=$ZSTD_LVER" >> $GITHUB_ENV
          echo "CORERULESET_LVER=$CORERULESET_LVER" >> $GITHUB_ENV
          echo "NGX_ALPINE_LVER=$NGX_ALPINE_LVER" >> $GITHUB_ENV
          echo "NGX_ALPINE_TAG=$NGX_ALPINE_TAG" >> $GITHUB_ENV
          if [[ ("$(echo -e "$NGX_LVER\n$NGX_CVER" | sort -V | head -n1)" != "$NGX_LVER" && "$NGX_ALPINE_LVER" == "$NGX_LVER") || (-z "$NGX_CVER" && -n "$NGX_ALPINE_LVER" && -n "$NGX_ALPINE_TAG") ]]; then
            echo "IS_RENEW=1" >> $GITHUB_ENV
          fi

      - name: 'Set up Docker QEMU'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/setup-qemu-action@v3.6.0

      - name: 'Set up Docker Buildx'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v3.11.1

      - name: 'Login to DockerHub'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Build and Push Nginx image'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6.18.0
        with:
          context: ${{ github.workspace }}/ldnmp/nginx
          file: ${{ github.workspace }}/ldnmp/nginx/Dockerfile
          platforms: linux/386, linux/amd64, linux/arm/v6, linux/arm/v7, linux/arm64/v8, linux/ppc64le, linux/riscv64, linux/s390x
          build-args: |
            NGX_LVER=${{ env.NGX_LVER }}
            ZSTD_LVER=${{ env.ZSTD_LVER }}
            CORERULESET_LVER=${{ env.CORERULESET_LVER }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/nginx:alpine
            ${{ env.DOCKER_USERNAME }}/nginx:${{ env.NGX_LVER }}-alpine
            ${{ env.DOCKER_USERNAME }}/nginx:${{ env.NGX_LVER }}-alpine${{ env.NGX_ALPINE_TAG }}
          push: true